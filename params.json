{"name":"Its-beta-test","tagline":"Intel is working to extend Photoshop* to take advantage of the latest image compression methods (BCn/DXT) via plugin. The purpose of this plugin is to provide a tool for artists to access superior compression results at optimized compression speeds within Photoshop*.","body":"# Welcome to the XXX Beta Program\r\nIt this stage we are seeking your testing and feedback on the first version of the plugin\r\n\r\n## Issues\r\nPlease use the following tags in your subjects\r\n* [BUG]: For things that don't work correctly\r\n* [FEATURE]: For feature requests\r\n* [FEEDBACK]: For general comments on the plugin, its usefulness (or not)\r\n\r\n## Getting Started (Installation)\r\n1. Close Photoshop\r\n2. Download the XXX.zip file and expand it on your local computer\r\n3. Copy the desired plugin file the XXX.8bi plugin file located in either XXX\\Plugins\\x64\\ or XXX\\Plugins\\Win32\\\r\n4. Paste the plugin into the appropriate Photoshop Plugin folder\r\n* D:\\Program Files\\Adobe Photoshop CC 2014\\Required\\Plug-Ins\\File Formats\r\n* D:\\Program Files\\Adobe\\Adobe Photoshop CS5 (64 Bit)\\Plug-ins\\File Formats\r\n\r\n## In Photoshop\r\n### Initiating Plugin \"Save As\"\r\n1. File Save As\r\n2. Select \"Save as type\" XXX.DDS\r\n2. Navigate to store location\r\n3. Assign file name \r\n4. Save\r\n5. Select desired plugin options and preview as necessary\r\n6. Ok\r\n\r\n### Reading File Saved via Plugin\r\n1. Open As\r\n2. Select XXX Plugin as type (to the right of \"File name\" field)\r\n3. Select file\r\n4. Select desired mipmap loading options if applicable\r\n5. Select desired color profile loading options\r\n\r\n\r\n\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}